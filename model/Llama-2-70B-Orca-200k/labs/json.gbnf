# An explanation of .gbnf (Grammar) files for LLaMa 2.
# This Grammar File is designed to define a grammar for a JSON Structure.
# Before proceeding, keep this in mind.
#     The symbol, "::=" can be read as "is defined as". It's used to specify that the symbol on the left-hand side
#     of "::=" is defined by the pattern or rule on the right-hand side.


root   ::= object # Defines the start symbol of the grammar. States the root element of the parsed structure is an object.
value  ::= object | array | string | number | ("true" | "false" | "null") ws # Defines 'value' as either an 'object,' 'array;' etc.


# Here, we define an object. In JSON, an object begins with a "{" which is what we see here. We then define the rules of the JSON data structure.
object ::=
  "{" ws (
            string ":" ws value
    ("," ws string ":" ws value)*
  )? "}" ws

# Here, we define an array. In JSON, an array begins with a "[" and contains values.
array  ::=
  "[" ws (
            value
    ("," ws value)*
  )? "]" ws

# Here, a string is defined
string ::=
  "\"" (
    [^"\\] |
    "\\" (["\\/bfnrt] | "u" [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F]) # escapes
  )* "\"" ws

# Then we define a number.
number ::= ("-"? ([0-9] | [1-9] [0-9]*)) ("." [0-9]+)? ([eE] [-+]? [0-9]+)? ws

# Optional space: by convention, applied in this grammar after literal chars when allowed
ws ::= ([ \t\n] ws)?
